name: build and deploy app to ec2 instance
on:
    push:
        branches:
            - main

env:
  IMAGE_NAME: vnavalianyi/jscc
  AWS_REGION: eu-central-1
            
jobs:
    build_and_push_docker_image:
        runs-on: [local]
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3        
            
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                images: ${{ env.IMAGE_NAME }}
                tags: |
                  type=sha
            
            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                context: app/.
                push: true
                tags: |
                  ${{ env.IMAGE_NAME }}:latest
                  ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}

    create_infrastructure_aws:
      runs-on: [local]
      needs: build_and_push_docker_image
      outputs:
        ip: ${{ steps.save-output.outputs.ip }}
      steps:
          - name: Check out the repo
            uses: actions/checkout@v3

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ env.AWS_REGION }}

          - name: Terraform init & plan
            env:
              TFVARS_FILE: ${{ secrets.TFVARS_FILE }}
            working-directory: ./Terraform
            run: |
              echo "$TFVARS_FILE" > terraform.tfvars
              terraform init
              terraform validate
              terraform plan
              terraform apply -auto-approve
            #  terraform output -raw ec2_public_ip > ip.txt

          - name: Save Terraform Outputs
            id: save-output
            working-directory: ./Terraform
            run: echo "ip=$(terraform output -raw ec2_public_ip)" >> "$GITHUB_OUTPUT"

          # - name: Test print Terraform Outputs
          #   run: echo ${{ steps.save-output.outputs.ip }}

    run_image:
      runs-on: [local]
      needs: create_infrastructure_aws
      steps:
        - name: executing remote ssh commands using ssh key
          uses: appleboy/ssh-action@v0.1.10
          with:
            host: ${{ needs.create_infrastructure_aws.outputs.ip }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              docker stop $(docker ps -a -q)
              docker rm $(docker ps -aq)
              docker rmi $(docker images -q)
              docker run -d -p 80:3000 vnavalianyi/jscc
          # - name: Outputs test
          #   run: echo ${{ needs.create_infrastructure_aws.outputs.ip }}